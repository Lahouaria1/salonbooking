name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch
  pull_request:
    branches:
      - main  # Trigger the workflow on pull requests to the main branch

jobs:
  # Build Job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        run: |
          curl -fsSL https://get.docker.com/ | sh
          docker version

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_REGISTRY }}/$GITHUB_REPOSITORY:${{ github.sha }} .

  # Test Job
  test:
    runs-on: ubuntu-latest
    needs: build  # This job depends on the build job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Set your required Node.js version

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  # Security Scan Job
  security:
    runs-on: ubuntu-latest
    needs: test  # This job depends on the test job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Run security scans
        run: |
          npm audit --audit-level=high  # Scan Node.js packages for vulnerabilities
          npx snyk test || true         # Run Snyk security test
          trivy image ${{ secrets.DOCKER_REGISTRY }}/$GITHUB_REPOSITORY:${{ github.sha }}  # Run Trivy container scan

  # Deploy Job
  deploy:
    runs-on: ubuntu-latest
    needs: security  # This job depends on the security job
    if: github.ref == 'refs/heads/main'  # Only deploy from the main branch
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Compose
        run: |
          curl -fsSL https://get.docker.com/ | sh
          docker version

      - name: Deploy with Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d
        env:
          DOCKER_IMAGE: ${{ secrets.DOCKER_REGISTRY }}/$GITHUB_REPOSITORY:${{ github.sha }}
